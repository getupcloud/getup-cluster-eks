{{- if and .Values.manifests .Values.loki.enabled }}
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: loki
  namespace: flux-system
spec:
  chart:
    spec:
      chart: loki
      sourceRef:
        kind: HelmRepository
        name: grafana
      version: 6.12.x
  install:
    createNamespace: true
    disableWait: false
    remediation:
      retries: -1
  upgrade:
    disableWait: false
    remediation:
      retries: -1
  interval: 10m
  timeout: 10m
  releaseName: loki
  storageNamespace: logging
  targetNamespace: logging
  values:
    deploymentMode: SimpleScalable

    write:
      replicas: 2
      resources:
        requests:
          cpu: 100m
          memory: 256Mi
        limits:
          cpu: 200m
          memory: 512Mi
      autoscaling:
        enabled: true
        minReplicas: 2
        maxReplicas: 6
        targetCPUUtilizationPercentage: 90
        targetMemoryUtilizationPercentage: 90

    read:
      replicas: 2
      requests:
        cpu: 100m
        memory: 256Mi
      limits:
        cpu: 200m
        memory: 512Mi
      autoscaling:
        enabled: true
        minReplicas: 2
        maxReplicas: 6
        targetCPUUtilizationPercentage: 90

    resultsCache:
      allocatedMemory: 2048
      connectionLimit: 4096
      tolerations:
      - key: dedicated
        value: infra
        effect: NoSchedule

      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            preference:
              matchExpressions:
              - key: node-role.kubernetes.io/infra
                operator: Exists
          - weight: 90
            preference:
              matchExpressions:
              - key: role
                operator: In
                values:
                - infra

    chunksCache:
      allocatedMemory: 2048
      connectionLimit: 4096
      tolerations:
      - key: dedicated
        value: infra
        effect: NoSchedule

      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            preference:
              matchExpressions:
              - key: node-role.kubernetes.io/infra
                operator: Exists
          - weight: 90
            preference:
              matchExpressions:
              - key: role
                operator: In
                values:
                - infra
      
    backend:
      replicas: 2
      requests:
        cpu: 100m
        memory: 256Mi
      limits:
        cpu: 200m
        memory: 512Mi
      autoscaling:
        enabled: true
        minReplicas: 2
        maxReplicas: 6
        targetCPUUtilizationPercentage: 90

    loki:
      auth_enabled: false

      storage:
        type: s3
#        type: filesystem

      schemaConfig:
        configs:
          - from: "2024-09-11"
            store: tsdb
            object_store: s3
            schema: v13
            index:
              prefix: loki_index_
              period: 24h

      commonConfig:
        replication_factor: 1
        #ring:
        #  kvstore:
        #    #store: inmemory
        #    store: memberlist

      limits_config:
        reject_old_samples: true
        reject_old_samples_max_age: 1w
        max_entries_limit_per_query: 20000
        retention_period: 720h
        split_queries_by_interval: 15m
        max_query_parallelism: 16

      #chunk_store_config:

      #distributor:
      #  ring:
      #    kvstore:
      #      store: inmemory

      #index_gateway:
      #  mode: simple
      #  ring:
      #    kvstore:
      #      store: inmemory

      ingester:
        chunk_block_size: 524288
        chunk_encoding: lz4
        max_chunk_age: 2h
        chunk_idle_period: 1h
        chunk_retain_period: 15s
        wal:
          replay_memory_ceiling: 400MB # should be smaller than resources.limits.memory
        #lifecycler:
        #  ring:
        #    kvstore:
        #      store: inmemory

      compactor:
        #compaction_interval: 5m
        retention_enabled: true
        retention_delete_delay: 2h
        delete_request_store: s3
        #retention_delete_worker_count: 150
        #compactor_ring:
        #  kvstore:
        #    store: inmemory

      frontend:
        max_outstanding_per_tenant: 1024

      query_scheduler:
        max_outstanding_requests_per_tenant: 1024

      query_range:
        parallelise_shardable_queries: true

    lokiCanary:
      enabled: false

    # -- DEPRECATED Monitoring section determines which monitoring features to enable, this section is being replaced
    # by https://github.com/grafana/meta-monitoring-chart
    monitoring:
      dashboards:
        # -- If enabled, create configmap with dashboards for monitoring Loki
        enabled: true

      rules:
        # -- If enabled, create PrometheusRule resource with Loki recording rules
        enabled: true
        alerting: true

      serviceMonitor:
        # -- If enabled, ServiceMonitor resources for Prometheus Operator are created
        enabled: true

      selfMonitoring:
        enabled: false # Disables grafana-agent-opera
        grafanaAgent:
          installOperator: false

    test:
      #prometheusAddress: http://monitoring-kube-prometheus-prometheus.monitoring.cluster.local:9090
      enabled: false

    #alerting_groups:
    #- name: Missing Log Lines for 30m
    #  rules:
    #  - alert: NoLogLinesForTooLong
    #    expr: sum(count_over_time({namespace="logging"}[30s])) == 0
    #    for: 30m

    #ingress:
    #  enabled: false
    gateway:
      enabled: true

    #resources:
    #  limits:
    #    cpu: 1

    #resources:
    #  limits:
    #    cpu: 1
    #    memory: 4Gi
    #  requests:
    #    cpu: 100m
    #    memory: 1Gi

    #priorityClassName: high-priority

    #serviceMonitor:
    #  enabled: true
    #  interval: 60s
{{- end }}